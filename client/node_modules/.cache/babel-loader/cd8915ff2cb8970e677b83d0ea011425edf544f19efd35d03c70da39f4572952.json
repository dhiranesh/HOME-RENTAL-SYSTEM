{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dhira\\\\OneDrive\\\\Desktop\\\\other\\\\final house rental website\\\\home-rental-app\\\\client\\\\src\\\\components\\\\BookingCalendar.js\";\nimport React from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport interactionPlugin from \"@fullcalendar/interaction\"; // for selectable dates\n\n// Styles for FullCalendar are often bundled with the JS or a global CSS is used.\n// Removed problematic direct CSS imports:\n// import '@fullcalendar/common/main.css'; \n// import '@fullcalendar/daygrid/main.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookingCalendar = ({\n  existingBookings,\n  onDateSelect\n}) => {\n  // existingBookings would be an array of dates or event objects\n  // onDateSelect would be a callback function when a date is clicked or selected\n\n  const handleDateClick = arg => {\n    // arg.dateStr is the date string like \"2024-07-28\"\n    if (onDateSelect) {\n      onDateSelect(arg.date);\n    }\n    alert('Date clicked: ' + arg.dateStr); // Placeholder\n  };\n\n  // Example: Disable past dates or already booked dates\n  // This is a simplified example. Real implementation might need more complex logic.\n  const getSelectableConstraint = selectInfo => {\n    // Prevent selecting dates in the past\n    return selectInfo.start > new Date();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: '1rem',\n      marginBottom: '1rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Select Booking Date:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FullCalendar, {\n      plugins: [dayGridPlugin, interactionPlugin],\n      initialView: \"dayGridMonth\",\n      selectable: true,\n      dateClick: handleDateClick // Use dateClick for individual date clicks\n      // select={handleDateSelect} // Use select for date range selections\n      // events={existingBookings} // To show existing bookings, format them as FullCalendar events\n      // selectConstraint={getSelectableConstraint} // Example to constrain selectable dates\n      ,\n      headerToolbar: {\n        left: 'prev,next today',\n        center: 'title',\n        right: 'dayGridMonth' //,timeGridWeek,timeGridDay' // Can add more views\n      },\n      height: \"auto\" // Adjust height as needed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"BookingCalendar Component - Placeholder for date selection.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_c = BookingCalendar;\nexport default BookingCalendar;\nvar _c;\n$RefreshReg$(_c, \"BookingCalendar\");","map":{"version":3,"names":["React","FullCalendar","dayGridPlugin","interactionPlugin","jsxDEV","_jsxDEV","BookingCalendar","existingBookings","onDateSelect","handleDateClick","arg","date","alert","dateStr","getSelectableConstraint","selectInfo","start","Date","style","marginTop","marginBottom","children","fileName","_jsxFileName","lineNumber","columnNumber","plugins","initialView","selectable","dateClick","headerToolbar","left","center","right","height","_c","$RefreshReg$"],"sources":["C:/Users/dhira/OneDrive/Desktop/other/final house rental website/home-rental-app/client/src/components/BookingCalendar.js"],"sourcesContent":["import React from 'react';\r\nimport FullCalendar from '@fullcalendar/react';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport interactionPlugin from \"@fullcalendar/interaction\"; // for selectable dates\r\n\r\n// Styles for FullCalendar are often bundled with the JS or a global CSS is used.\r\n// Removed problematic direct CSS imports:\r\n// import '@fullcalendar/common/main.css'; \r\n// import '@fullcalendar/daygrid/main.css';\r\n\r\n\r\nconst BookingCalendar = ({ existingBookings, onDateSelect }) => {\r\n  // existingBookings would be an array of dates or event objects\r\n  // onDateSelect would be a callback function when a date is clicked or selected\r\n\r\n  const handleDateClick = (arg) => {\r\n    // arg.dateStr is the date string like \"2024-07-28\"\r\n    if (onDateSelect) {\r\n      onDateSelect(arg.date);\r\n    }\r\n    alert('Date clicked: ' + arg.dateStr); // Placeholder\r\n  };\r\n\r\n  // Example: Disable past dates or already booked dates\r\n  // This is a simplified example. Real implementation might need more complex logic.\r\n  const getSelectableConstraint = (selectInfo) => {\r\n    // Prevent selecting dates in the past\r\n    return selectInfo.start > new Date();\r\n  };\r\n\r\n  return (\r\n    <div style={{ marginTop: '1rem', marginBottom: '1rem' }}>\r\n      <h4>Select Booking Date:</h4>\r\n      <FullCalendar\r\n        plugins={[dayGridPlugin, interactionPlugin]}\r\n        initialView=\"dayGridMonth\"\r\n        selectable={true}\r\n        dateClick={handleDateClick} // Use dateClick for individual date clicks\r\n        // select={handleDateSelect} // Use select for date range selections\r\n        // events={existingBookings} // To show existing bookings, format them as FullCalendar events\r\n        // selectConstraint={getSelectableConstraint} // Example to constrain selectable dates\r\n        headerToolbar={{\r\n          left: 'prev,next today',\r\n          center: 'title',\r\n          right: 'dayGridMonth' //,timeGridWeek,timeGridDay' // Can add more views\r\n        }}\r\n        height=\"auto\" // Adjust height as needed\r\n      />\r\n      <p>BookingCalendar Component - Placeholder for date selection.</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookingCalendar;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,qBAAqB;AAC9C,OAAOC,aAAa,MAAM,uBAAuB;AACjD,OAAOC,iBAAiB,MAAM,2BAA2B,CAAC,CAAC;;AAE3D;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGA,MAAMC,eAAe,GAAGA,CAAC;EAAEC,gBAAgB;EAAEC;AAAa,CAAC,KAAK;EAC9D;EACA;;EAEA,MAAMC,eAAe,GAAIC,GAAG,IAAK;IAC/B;IACA,IAAIF,YAAY,EAAE;MAChBA,YAAY,CAACE,GAAG,CAACC,IAAI,CAAC;IACxB;IACAC,KAAK,CAAC,gBAAgB,GAAGF,GAAG,CAACG,OAAO,CAAC,CAAC,CAAC;EACzC,CAAC;;EAED;EACA;EACA,MAAMC,uBAAuB,GAAIC,UAAU,IAAK;IAC9C;IACA,OAAOA,UAAU,CAACC,KAAK,GAAG,IAAIC,IAAI,CAAC,CAAC;EACtC,CAAC;EAED,oBACEZ,OAAA;IAAKa,KAAK,EAAE;MAAEC,SAAS,EAAE,MAAM;MAAEC,YAAY,EAAE;IAAO,CAAE;IAAAC,QAAA,gBACtDhB,OAAA;MAAAgB,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7BpB,OAAA,CAACJ,YAAY;MACXyB,OAAO,EAAE,CAACxB,aAAa,EAAEC,iBAAiB,CAAE;MAC5CwB,WAAW,EAAC,cAAc;MAC1BC,UAAU,EAAE,IAAK;MACjBC,SAAS,EAAEpB,eAAgB,CAAC;MAC5B;MACA;MACA;MAAA;MACAqB,aAAa,EAAE;QACbC,IAAI,EAAE,iBAAiB;QACvBC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,cAAc,CAAC;MACxB,CAAE;MACFC,MAAM,EAAC,MAAM,CAAC;IAAA;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf,CAAC,eACFpB,OAAA;MAAAgB,QAAA,EAAG;IAA2D;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/D,CAAC;AAEV,CAAC;AAACU,EAAA,GAxCI7B,eAAe;AA0CrB,eAAeA,eAAe;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}