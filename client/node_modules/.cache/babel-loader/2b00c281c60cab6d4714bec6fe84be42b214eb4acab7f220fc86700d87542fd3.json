{"ast":null,"code":"import axios from 'axios';\n\n// review API functions\n\nconst API_URL = '/api/reviews'; // Assuming your backend routes are prefixed with /api\n\n// Add a review for a property\nexport const addReview = async (propertyId, reviewData, token) => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    };\n    // The route format should match the backend API route format\n    // The current implementation expects /api/reviews with propertyId in request body\n    reviewData.propertyId = propertyId; // Ensure propertyId is included in the request body\n    const response = await axios.post(API_URL, reviewData, config);\n    return response.data;\n  } catch (error) {\n    var _error$response, _error$response$data, _error$response2;\n    console.error(`Error adding review for property ${propertyId}:`, ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message);\n    throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error;\n  }\n};\n\n// Get reviews for a property\nexport const getPropertyReviews = async propertyId => {\n  try {\n    const response = await axios.get(`${API_URL}/property/${propertyId}`);\n    return response.data;\n  } catch (error) {\n    var _error$response3, _error$response3$data, _error$response4;\n    console.error(`Error fetching reviews for property ${propertyId}:`, ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || error.message);\n    throw ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || error;\n  }\n};\n\n// Get reviews by a user\nexport const getUserReviews = async (userId, token) => {\n  try {\n    const config = {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    };\n    const response = await axios.get(`${API_URL}/user/${userId}`, config);\n    return response.data;\n  } catch (error) {\n    var _error$response5, _error$response5$data, _error$response6;\n    console.error(`Error fetching reviews by user ${userId}:`, ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.message) || error.message);\n    throw ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.data) || error;\n  }\n};\n\n// Update a review\nexport const updateReview = async (reviewId, reviewData, token) => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    };\n    const response = await axios.put(`${API_URL}/${reviewId}`, reviewData, config);\n    return response.data;\n  } catch (error) {\n    var _error$response7, _error$response7$data, _error$response8;\n    console.error(`Error updating review ${reviewId}:`, ((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : (_error$response7$data = _error$response7.data) === null || _error$response7$data === void 0 ? void 0 : _error$response7$data.message) || error.message);\n    throw ((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : _error$response8.data) || error;\n  }\n};\n\n// Delete a review\nexport const deleteReview = async (reviewId, token) => {\n  try {\n    const config = {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    };\n    const response = await axios.delete(`${API_URL}/${reviewId}`, config);\n    return response.data;\n  } catch (error) {\n    var _error$response9, _error$response9$data, _error$response0;\n    console.error(`Error deleting review ${reviewId}:`, ((_error$response9 = error.response) === null || _error$response9 === void 0 ? void 0 : (_error$response9$data = _error$response9.data) === null || _error$response9$data === void 0 ? void 0 : _error$response9$data.message) || error.message);\n    throw ((_error$response0 = error.response) === null || _error$response0 === void 0 ? void 0 : _error$response0.data) || error;\n  }\n};","map":{"version":3,"names":["axios","API_URL","addReview","propertyId","reviewData","token","config","headers","response","post","data","error","_error$response","_error$response$data","_error$response2","console","message","getPropertyReviews","get","_error$response3","_error$response3$data","_error$response4","getUserReviews","userId","_error$response5","_error$response5$data","_error$response6","updateReview","reviewId","put","_error$response7","_error$response7$data","_error$response8","deleteReview","delete","_error$response9","_error$response9$data","_error$response0"],"sources":["C:/Users/dhira/OneDrive/Desktop/other/final house rental website/home-rental-app/client/src/api/review.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// review API functions\r\n\r\nconst API_URL = '/api/reviews'; // Assuming your backend routes are prefixed with /api\r\n\r\n// Add a review for a property\r\nexport const addReview = async (propertyId, reviewData, token) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${token}`,\r\n      },\r\n    };\r\n    // The route format should match the backend API route format\r\n    // The current implementation expects /api/reviews with propertyId in request body\r\n    reviewData.propertyId = propertyId; // Ensure propertyId is included in the request body\r\n    const response = await axios.post(API_URL, reviewData, config);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(`Error adding review for property ${propertyId}:`, error.response?.data?.message || error.message);\r\n    throw error.response?.data || error;\r\n  }\r\n};\r\n\r\n// Get reviews for a property\r\nexport const getPropertyReviews = async (propertyId) => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/property/${propertyId}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(`Error fetching reviews for property ${propertyId}:`, error.response?.data?.message || error.message);\r\n    throw error.response?.data || error;\r\n  }\r\n};\r\n\r\n// Get reviews by a user\r\nexport const getUserReviews = async (userId, token) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Authorization': `Bearer ${token}`,\r\n      },\r\n    };\r\n    const response = await axios.get(`${API_URL}/user/${userId}`, config);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(`Error fetching reviews by user ${userId}:`, error.response?.data?.message || error.message);\r\n    throw error.response?.data || error;\r\n  }\r\n};\r\n\r\n// Update a review\r\nexport const updateReview = async (reviewId, reviewData, token) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${token}`,\r\n      },\r\n    };\r\n    const response = await axios.put(`${API_URL}/${reviewId}`, reviewData, config);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(`Error updating review ${reviewId}:`, error.response?.data?.message || error.message);\r\n    throw error.response?.data || error;\r\n  }\r\n};\r\n\r\n// Delete a review\r\nexport const deleteReview = async (reviewId, token) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Authorization': `Bearer ${token}`,\r\n      },\r\n    };\r\n    const response = await axios.delete(`${API_URL}/${reviewId}`, config);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(`Error deleting review ${reviewId}:`, error.response?.data?.message || error.message);\r\n    throw error.response?.data || error;\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}