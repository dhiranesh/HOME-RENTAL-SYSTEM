{"ast":null,"code":"import React from'react';import FullCalendar from'@fullcalendar/react';import dayGridPlugin from'@fullcalendar/daygrid';import interactionPlugin from\"@fullcalendar/interaction\";// for selectable dates\n// Styles for FullCalendar are often bundled with the JS or a global CSS is used.\n// Removed problematic direct CSS imports:\n// import '@fullcalendar/common/main.css'; \n// import '@fullcalendar/daygrid/main.css';\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const BookingCalendar=_ref=>{let{existingBookings,onDateSelect}=_ref;// existingBookings would be an array of dates or event objects\n// onDateSelect would be a callback function when a date is clicked or selected\nconst handleDateClick=arg=>{// arg.dateStr is the date string like \"2024-07-28\"\nif(onDateSelect){onDateSelect(arg.date);}alert('Date clicked: '+arg.dateStr);// Placeholder\n};// Example: Disable past dates or already booked dates\n// This is a simplified example. Real implementation might need more complex logic.\nconst getSelectableConstraint=selectInfo=>{// Prevent selecting dates in the past\nreturn selectInfo.start>new Date();};return/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:'1rem',marginBottom:'1rem'},children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Select Booking Date:\"}),/*#__PURE__*/_jsx(FullCalendar,{plugins:[dayGridPlugin,interactionPlugin],initialView:\"dayGridMonth\",selectable:true,dateClick:handleDateClick// Use dateClick for individual date clicks\n// select={handleDateSelect} // Use select for date range selections\n// events={existingBookings} // To show existing bookings, format them as FullCalendar events\n// selectConstraint={getSelectableConstraint} // Example to constrain selectable dates\n,headerToolbar:{left:'prev,next today',center:'title',right:'dayGridMonth'//,timeGridWeek,timeGridDay' // Can add more views\n},height:\"auto\"// Adjust height as needed\n}),/*#__PURE__*/_jsx(\"p\",{children:\"BookingCalendar Component - Placeholder for date selection.\"})]});};export default BookingCalendar;","map":{"version":3,"names":["React","FullCalendar","dayGridPlugin","interactionPlugin","jsx","_jsx","jsxs","_jsxs","BookingCalendar","_ref","existingBookings","onDateSelect","handleDateClick","arg","date","alert","dateStr","getSelectableConstraint","selectInfo","start","Date","style","marginTop","marginBottom","children","plugins","initialView","selectable","dateClick","headerToolbar","left","center","right","height"],"sources":["C:/Users/dhira/OneDrive/Desktop/other/final house rental website/home-rental-app/client/src/components/BookingCalendar.js"],"sourcesContent":["import React from 'react';\r\nimport FullCalendar from '@fullcalendar/react';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport interactionPlugin from \"@fullcalendar/interaction\"; // for selectable dates\r\n\r\n// Styles for FullCalendar are often bundled with the JS or a global CSS is used.\r\n// Removed problematic direct CSS imports:\r\n// import '@fullcalendar/common/main.css'; \r\n// import '@fullcalendar/daygrid/main.css';\r\n\r\n\r\nconst BookingCalendar = ({ existingBookings, onDateSelect }) => {\r\n  // existingBookings would be an array of dates or event objects\r\n  // onDateSelect would be a callback function when a date is clicked or selected\r\n\r\n  const handleDateClick = (arg) => {\r\n    // arg.dateStr is the date string like \"2024-07-28\"\r\n    if (onDateSelect) {\r\n      onDateSelect(arg.date);\r\n    }\r\n    alert('Date clicked: ' + arg.dateStr); // Placeholder\r\n  };\r\n\r\n  // Example: Disable past dates or already booked dates\r\n  // This is a simplified example. Real implementation might need more complex logic.\r\n  const getSelectableConstraint = (selectInfo) => {\r\n    // Prevent selecting dates in the past\r\n    return selectInfo.start > new Date();\r\n  };\r\n\r\n  return (\r\n    <div style={{ marginTop: '1rem', marginBottom: '1rem' }}>\r\n      <h4>Select Booking Date:</h4>\r\n      <FullCalendar\r\n        plugins={[dayGridPlugin, interactionPlugin]}\r\n        initialView=\"dayGridMonth\"\r\n        selectable={true}\r\n        dateClick={handleDateClick} // Use dateClick for individual date clicks\r\n        // select={handleDateSelect} // Use select for date range selections\r\n        // events={existingBookings} // To show existing bookings, format them as FullCalendar events\r\n        // selectConstraint={getSelectableConstraint} // Example to constrain selectable dates\r\n        headerToolbar={{\r\n          left: 'prev,next today',\r\n          center: 'title',\r\n          right: 'dayGridMonth' //,timeGridWeek,timeGridDay' // Can add more views\r\n        }}\r\n        height=\"auto\" // Adjust height as needed\r\n      />\r\n      <p>BookingCalendar Component - Placeholder for date selection.</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookingCalendar;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,YAAY,KAAM,qBAAqB,CAC9C,MAAO,CAAAC,aAAa,KAAM,uBAAuB,CACjD,MAAO,CAAAC,iBAAiB,KAAM,2BAA2B,CAAE;AAE3D;AACA;AACA;AACA;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAGA,KAAM,CAAAC,eAAe,CAAGC,IAAA,EAAwC,IAAvC,CAAEC,gBAAgB,CAAEC,YAAa,CAAC,CAAAF,IAAA,CACzD;AACA;AAEA,KAAM,CAAAG,eAAe,CAAIC,GAAG,EAAK,CAC/B;AACA,GAAIF,YAAY,CAAE,CAChBA,YAAY,CAACE,GAAG,CAACC,IAAI,CAAC,CACxB,CACAC,KAAK,CAAC,gBAAgB,CAAGF,GAAG,CAACG,OAAO,CAAC,CAAE;AACzC,CAAC,CAED;AACA;AACA,KAAM,CAAAC,uBAAuB,CAAIC,UAAU,EAAK,CAC9C;AACA,MAAO,CAAAA,UAAU,CAACC,KAAK,CAAG,GAAI,CAAAC,IAAI,CAAC,CAAC,CACtC,CAAC,CAED,mBACEb,KAAA,QAAKc,KAAK,CAAE,CAAEC,SAAS,CAAE,MAAM,CAAEC,YAAY,CAAE,MAAO,CAAE,CAAAC,QAAA,eACtDnB,IAAA,OAAAmB,QAAA,CAAI,sBAAoB,CAAI,CAAC,cAC7BnB,IAAA,CAACJ,YAAY,EACXwB,OAAO,CAAE,CAACvB,aAAa,CAAEC,iBAAiB,CAAE,CAC5CuB,WAAW,CAAC,cAAc,CAC1BC,UAAU,CAAE,IAAK,CACjBC,SAAS,CAAEhB,eAAiB;AAC5B;AACA;AACA;AAAA,CACAiB,aAAa,CAAE,CACbC,IAAI,CAAE,iBAAiB,CACvBC,MAAM,CAAE,OAAO,CACfC,KAAK,CAAE,cAAe;AACxB,CAAE,CACFC,MAAM,CAAC,MAAO;AAAA,CACf,CAAC,cACF5B,IAAA,MAAAmB,QAAA,CAAG,6DAA2D,CAAG,CAAC,EAC/D,CAAC,CAEV,CAAC,CAED,cAAe,CAAAhB,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}