{"ast":null,"code":"import axios from 'axios';\nconst API_URL = '/api/users'; // Assuming your backend routes are prefixed with /api\n\n// Get user profile\nexport const getUserProfile = async (userId, token) => {\n  try {\n    const config = {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    };\n    const response = await axios.get(`${API_URL}/${userId}/profile`, config);\n    return response.data;\n  } catch (error) {\n    var _error$response, _error$response$data, _error$response2;\n    console.error(`Error fetching profile for user ${userId}:`, ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message);\n    throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error;\n  }\n};\n\n// Update user profile\nexport const updateUserProfile = async (profileData, token) => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    };\n    const response = await axios.put(`/api/users/profile`, profileData, config);\n    return response.data;\n  } catch (error) {\n    var _error$response3, _error$response3$data, _error$response4;\n    console.error('Error updating profile:', ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || error.message);\n    throw ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || error;\n  }\n};\n\n// Get all users (admin only)\nexport const getAllUsers = async token => {\n  try {\n    const config = {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    };\n    const response = await axios.get(API_URL, config); // Route typically /api/users\n    return response.data;\n  } catch (error) {\n    var _error$response5, _error$response5$data, _error$response6;\n    console.error('Error fetching all users:', ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.message) || error.message);\n    throw ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.data) || error;\n  }\n};\n\n// Update user role (admin only)\nexport const updateUserRole = async (userId, role, token) => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    };\n    const response = await axios.put(`${API_URL}/${userId}/role`, {\n      role\n    }, config);\n    return response.data;\n  } catch (error) {\n    var _error$response7, _error$response7$data, _error$response8;\n    console.error(`Error updating role for user ${userId}:`, ((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : (_error$response7$data = _error$response7.data) === null || _error$response7$data === void 0 ? void 0 : _error$response7$data.message) || error.message);\n    throw ((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : _error$response8.data) || error;\n  }\n};\n\n// Delete a user (admin only)\nexport const deleteUser = async (userId, token) => {\n  try {\n    const config = {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    };\n    const response = await axios.delete(`${API_URL}/${userId}`, config);\n    return response.data;\n  } catch (error) {\n    var _error$response9, _error$response9$data, _error$response0;\n    console.error(`Error deleting user ${userId}:`, ((_error$response9 = error.response) === null || _error$response9 === void 0 ? void 0 : (_error$response9$data = _error$response9.data) === null || _error$response9$data === void 0 ? void 0 : _error$response9$data.message) || error.message);\n    throw ((_error$response0 = error.response) === null || _error$response0 === void 0 ? void 0 : _error$response0.data) || error;\n  }\n};\n\n// Get user listings (properties listed by the user)\nexport const getUserListings = async (userId, token) => {\n  try {\n    const config = {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    };\n    // This might be /api/users/:userId/properties or /api/properties?ownerId=:userId\n    // Adjust based on your backend API design.\n    const response = await axios.get(`${API_URL}/${userId}/properties`, config);\n    return response.data;\n  } catch (error) {\n    var _error$response1, _error$response1$data, _error$response10;\n    console.error(`Error fetching listings for user ${userId}:`, ((_error$response1 = error.response) === null || _error$response1 === void 0 ? void 0 : (_error$response1$data = _error$response1.data) === null || _error$response1$data === void 0 ? void 0 : _error$response1$data.message) || error.message);\n    throw ((_error$response10 = error.response) === null || _error$response10 === void 0 ? void 0 : _error$response10.data) || error;\n  }\n};","map":{"version":3,"names":["axios","API_URL","getUserProfile","userId","token","config","headers","response","get","data","error","_error$response","_error$response$data","_error$response2","console","message","updateUserProfile","profileData","put","_error$response3","_error$response3$data","_error$response4","getAllUsers","_error$response5","_error$response5$data","_error$response6","updateUserRole","role","_error$response7","_error$response7$data","_error$response8","deleteUser","delete","_error$response9","_error$response9$data","_error$response0","getUserListings","_error$response1","_error$response1$data","_error$response10"],"sources":["C:/Users/dhira/OneDrive/Desktop/other/final house rental website/home-rental-app/client/src/api/user.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = '/api/users'; // Assuming your backend routes are prefixed with /api\r\n\r\n// Get user profile\r\nexport const getUserProfile = async (userId, token) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Authorization': `Bearer ${token}`,\r\n      },\r\n    };\r\n    const response = await axios.get(`${API_URL}/${userId}/profile`, config);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(`Error fetching profile for user ${userId}:`, error.response?.data?.message || error.message);\r\n    throw error.response?.data || error;\r\n  }\r\n};\r\n\r\n// Update user profile\r\nexport const updateUserProfile = async (profileData, token) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${token}`,\r\n      },\r\n    };\r\n    const response = await axios.put(`/api/users/profile`, profileData, config);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error updating profile:', error.response?.data?.message || error.message);\r\n    throw error.response?.data || error;\r\n  }\r\n};\r\n\r\n// Get all users (admin only)\r\nexport const getAllUsers = async (token) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Authorization': `Bearer ${token}`,\r\n      },\r\n    };\r\n    const response = await axios.get(API_URL, config); // Route typically /api/users\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching all users:', error.response?.data?.message || error.message);\r\n    throw error.response?.data || error;\r\n  }\r\n};\r\n\r\n// Update user role (admin only)\r\nexport const updateUserRole = async (userId, role, token) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${token}`,\r\n      },\r\n    };\r\n    const response = await axios.put(`${API_URL}/${userId}/role`, { role }, config);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(`Error updating role for user ${userId}:`, error.response?.data?.message || error.message);\r\n    throw error.response?.data || error;\r\n  }\r\n};\r\n\r\n// Delete a user (admin only)\r\nexport const deleteUser = async (userId, token) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Authorization': `Bearer ${token}`,\r\n      },\r\n    };\r\n    const response = await axios.delete(`${API_URL}/${userId}`, config);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(`Error deleting user ${userId}:`, error.response?.data?.message || error.message);\r\n    throw error.response?.data || error;\r\n  }\r\n};\r\n\r\n// Get user listings (properties listed by the user)\r\nexport const getUserListings = async (userId, token) => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`,\r\n            },\r\n        };\r\n        // This might be /api/users/:userId/properties or /api/properties?ownerId=:userId\r\n        // Adjust based on your backend API design.\r\n        const response = await axios.get(`${API_URL}/${userId}/properties`, config);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error(`Error fetching listings for user ${userId}:`, error.response?.data?.message || error.message);\r\n        throw error.response?.data || error;\r\n    }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}