{"ast":null,"code":"import axios from 'axios';\nconst API_URL = '/api/bookings'; // Assuming your backend routes are prefixed with /api\n\n// Create a new booking\nexport const createBooking = async (bookingData, token) => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    };\n    const response = await axios.post(API_URL, bookingData, config);\n    return response.data;\n  } catch (error) {\n    var _error$response, _error$response$data, _error$response2;\n    console.error('Error creating booking:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message);\n    throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error;\n  }\n};\n\n// Get bookings for a user\nexport const getUserBookings = async (userId, token) => {\n  try {\n    const config = {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    };\n    // Assuming an endpoint like /api/bookings/user/:userId or a query param\n    const response = await axios.get(`${API_URL}/user/${userId}`, config);\n    return response.data;\n  } catch (error) {\n    var _error$response3, _error$response3$data, _error$response4;\n    console.error(`Error fetching bookings for user ${userId}:`, ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || error.message);\n    throw ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || error;\n  }\n};\n\n// Get bookings for a property (potentially for admin or property owner)\nexport const getPropertyBookings = async (propertyId, token) => {\n  try {\n    const config = {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    };\n    const response = await axios.get(`${API_URL}/property/${propertyId}`, config);\n    return response.data;\n  } catch (error) {\n    var _error$response5, _error$response5$data, _error$response6;\n    console.error(`Error fetching bookings for property ${propertyId}:`, ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.message) || error.message);\n    throw ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.data) || error;\n  }\n};\n\n// Cancel a booking\nexport const cancelBooking = async (bookingId, token) => {\n  try {\n    const config = {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    };\n    // Assuming a DELETE request or a PUT/PATCH to update status\n    const response = await axios.patch(`${API_URL}/${bookingId}/cancel`, {}, config);\n    return response.data;\n  } catch (error) {\n    var _error$response7, _error$response7$data, _error$response8;\n    console.error(`Error cancelling booking ${bookingId}:`, ((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : (_error$response7$data = _error$response7.data) === null || _error$response7$data === void 0 ? void 0 : _error$response7$data.message) || error.message);\n    throw ((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : _error$response8.data) || error;\n  }\n};\n\n// Get a single booking by ID\nexport const getBookingById = async (bookingId, token) => {\n  try {\n    const config = {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    };\n    const response = await axios.get(`${API_URL}/${bookingId}`, config);\n    return response.data;\n  } catch (error) {\n    var _error$response9, _error$response9$data, _error$response0;\n    console.error(`Error fetching booking ${bookingId}:`, ((_error$response9 = error.response) === null || _error$response9 === void 0 ? void 0 : (_error$response9$data = _error$response9.data) === null || _error$response9$data === void 0 ? void 0 : _error$response9$data.message) || error.message);\n    throw ((_error$response0 = error.response) === null || _error$response0 === void 0 ? void 0 : _error$response0.data) || error;\n  }\n};\n\n// Update booking status (e.g., admin confirming a booking)\nexport const updateBookingStatus = async (bookingId, status, token) => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    };\n    const response = await axios.patch(`${API_URL}/${bookingId}/status`, {\n      status\n    }, config);\n    return response.data;\n  } catch (error) {\n    var _error$response1, _error$response1$data, _error$response10;\n    console.error(`Error updating status for booking ${bookingId}:`, ((_error$response1 = error.response) === null || _error$response1 === void 0 ? void 0 : (_error$response1$data = _error$response1.data) === null || _error$response1$data === void 0 ? void 0 : _error$response1$data.message) || error.message);\n    throw ((_error$response10 = error.response) === null || _error$response10 === void 0 ? void 0 : _error$response10.data) || error;\n  }\n};","map":{"version":3,"names":["axios","API_URL","createBooking","bookingData","token","config","headers","response","post","data","error","_error$response","_error$response$data","_error$response2","console","message","getUserBookings","userId","get","_error$response3","_error$response3$data","_error$response4","getPropertyBookings","propertyId","_error$response5","_error$response5$data","_error$response6","cancelBooking","bookingId","patch","_error$response7","_error$response7$data","_error$response8","getBookingById","_error$response9","_error$response9$data","_error$response0","updateBookingStatus","status","_error$response1","_error$response1$data","_error$response10"],"sources":["C:/Users/dhira/OneDrive/Desktop/other/final house rental website/home-rental-app/client/src/api/booking.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = '/api/bookings'; // Assuming your backend routes are prefixed with /api\r\n\r\n// Create a new booking\r\nexport const createBooking = async (bookingData, token) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${token}`,\r\n      },\r\n    };\r\n    const response = await axios.post(API_URL, bookingData, config);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error creating booking:', error.response?.data?.message || error.message);\r\n    throw error.response?.data || error;\r\n  }\r\n};\r\n\r\n// Get bookings for a user\r\nexport const getUserBookings = async (userId, token) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Authorization': `Bearer ${token}`,\r\n      },\r\n    };\r\n    // Assuming an endpoint like /api/bookings/user/:userId or a query param\r\n    const response = await axios.get(`${API_URL}/user/${userId}`, config);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(`Error fetching bookings for user ${userId}:`, error.response?.data?.message || error.message);\r\n    throw error.response?.data || error;\r\n  }\r\n};\r\n\r\n// Get bookings for a property (potentially for admin or property owner)\r\nexport const getPropertyBookings = async (propertyId, token) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Authorization': `Bearer ${token}`,\r\n      },\r\n    };\r\n    const response = await axios.get(`${API_URL}/property/${propertyId}`, config);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(`Error fetching bookings for property ${propertyId}:`, error.response?.data?.message || error.message);\r\n    throw error.response?.data || error;\r\n  }\r\n};\r\n\r\n\r\n// Cancel a booking\r\nexport const cancelBooking = async (bookingId, token) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Authorization': `Bearer ${token}`,\r\n      },\r\n    };\r\n    // Assuming a DELETE request or a PUT/PATCH to update status\r\n    const response = await axios.patch(`${API_URL}/${bookingId}/cancel`, {}, config);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(`Error cancelling booking ${bookingId}:`, error.response?.data?.message || error.message);\r\n    throw error.response?.data || error;\r\n  }\r\n};\r\n\r\n// Get a single booking by ID\r\nexport const getBookingById = async (bookingId, token) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Authorization': `Bearer ${token}`,\r\n      },\r\n    };\r\n    const response = await axios.get(`${API_URL}/${bookingId}`, config);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(`Error fetching booking ${bookingId}:`, error.response?.data?.message || error.message);\r\n    throw error.response?.data || error;\r\n  }\r\n};\r\n\r\n// Update booking status (e.g., admin confirming a booking)\r\nexport const updateBookingStatus = async (bookingId, status, token) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${token}`,\r\n      },\r\n    };\r\n    const response = await axios.patch(`${API_URL}/${bookingId}/status`, { status }, config);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(`Error updating status for booking ${bookingId}:`, error.response?.data?.message || error.message);\r\n    throw error.response?.data || error;\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}